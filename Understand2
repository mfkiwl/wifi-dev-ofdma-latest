WifiMacHelper by defaults sets Protection Manager and Ack Manager, doesn't set the only other parameter it can set which is the Multi User Scheduler, that, we have to set ourselves. When you do not set the Multi User Scheduler, instead of HeFrameExchangeManager starting the FrameExchange, HtFrameExchangeManager starts the FrameExchange. HtFrameExchangeManager attempts frame aggregation too, and after performing that calls ForwardPsduDown which has exactly the same signature as ForwardDown in the MacLow class of the earlier model. The MacLow model actually converts the psdu parameter it gets into a PsduMap parameter before setting aggregation to true in the txVector exactly as is being down in the ForwardDown method of HtFrameExchange. 
For the HeFrameExchange method the method that needs to be traced is called ForwardPsduMapDown, this has a psdu map as a parameter so placing a tracer is easier. 
One more difference is that the ACK sequence specified is not imposed in HtFrameExchange wherehas the DL_MU_AGGREGATE_TF is imposed in HeFrameExchange.
WifiHelper allows you to set the MAC and PHY standard. Both of which are same. (802_11_ax is both a MAC and PHY layer specification)
Now, the old models had a class MacLow which had a tracer for the event 'ForwardDown' when a PsduMap was forwarded. This was used to get access to the forwarded PsduMap and txVector to understand what is the situation of Aggregation.
In the new models, MacLow has been replaced by a heirarchy of FrameExchangeManager classes. Now, I believe if I set the standed to 802.11ax the HeFrameExchangeManager methods are being called, and this class has a method very similar to the old models for when a PsduMap is forwarded down, called ForwadPsduMap. By placing a tracer on this, I believe I can once again get information related to aggregation.
